module enemy (
    input clk,
    input rst,
    
    input cursorX[11],
    input cursorY[11],
        
    output enemyPosX[11],
    output enemyPosY[11],
    
    output r,
    output g,
    output b

  ) {


  .clk(clk){
    .rst(rst){
      dff charX[11](#INIT(400));
      dff charY[11](#INIT(110));
  
      fsm state(.clk(clk), #INIT(MOVE_R)) = {MOVE_R, MOVE_L, MOVE_U, MOVE_D};
      
      dff timer[18];
      dff statecounter[20];
      
      dff difficultyTimer[32];
      dff difficultyLevel[20];
    }   

  }
  
  pn_gen rand;
  
  always {
    // initialize rand
    rand.seed = 1337;
    rand.next = timer.q[0];
    rand.clk = clk;
    rand.rst = rst;
    
    // difficulty increaser, make enemy move faster over time
    difficultyTimer.d = difficultyTimer.q + 1;
    
    if(difficultyTimer.q[31] == 1){
      difficultyLevel.d = difficultyLevel.q + 1;
      difficultyTimer.d = 0;
    }
    
    
    // Draw enemy
    r = 0;
    g = 0;
    b = 0;
    
    if((cursorX - charX.q + 26) > 0 && (cursorX - charX.q + 26) < 80 ){
      if((cursorY - charY.q + 26) > 0 && (cursorY - charY.q + 26) < 100){
        if(difficultyLevel.q >= 0 && difficultyLevel.q < 2){
          r = 0;
          g = 1;
          b = 1;
        } else if (difficultyLevel.q >= 2 && difficultyLevel.q < 4){
          r = 0;
          g = 0;
          b = 1;
        } else if (difficultyLevel.q >= 4 && difficultyLevel.q < 6){
          r = 1;
          g = 1;
          b = 0;
        } else if (difficultyLevel.q >= 6 && difficultyLevel.q < 7) {
          r = 1;
          g = 0;
          b = 0;
        } else {
          r = rand.num[0];
          g = rand.num[1];
          b = rand.num[2];
        }
      }
    } else {
      r = 0;
      g = 0;
      b = 0;  
    }
      



    timer.d = timer.q + 1;

    // Enemy Motion
    // TODO to refine the motion
    
    if(timer.q == 1){
      statecounter.d = statecounter.q + 1;
      // Randomly transition between states
      if(statecounter.q  >= 0 && statecounter.q < 150){
        state.d = state.MOVE_U;
      }
        
      else if(statecounter.q  >= 150 && statecounter.q < 300){
        state.d = state.MOVE_R;
      }
       
      else if(statecounter.q  >= 300 && statecounter.q < 450){
        state.d = state.MOVE_D;
      }
            
      else if(statecounter.q  >= 450 && statecounter.q < 600){
        state.d = state.MOVE_L;
      }
            
      else {
        statecounter.d = 0;
      }

    
      
      case (state.q){      
        state.MOVE_U:
          if(charY.q >= 40){
            charY.d = charY.q - 1 - difficultyLevel.q/2;
          } 
          
        state.MOVE_D:
          if(charY.q <= 500){
            charY.d = charY.q + 1 + difficultyLevel.q/2;
          } 
            
        state.MOVE_L:
          if(charX.q <= 720){
            charX.d = charX.q + 1 + difficultyLevel.q/2;
          }
            
        state.MOVE_R:
          if(charX.q >= 70){
            charX.d = charX.q - 1 - difficultyLevel.q/2  ;
          }  
      }
    }
   
    enemyPosX = charX.q;
    enemyPosY = charY.q;
  }
}
