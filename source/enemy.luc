module enemy (
    input clk,
    input rst,
    
    input cursorX[11],
    input cursorY[11],
    
    output enemyPosX[11],
    output enemyPosY[11],

    output r,
    output g,
    output b

  ) {

  .clk(clk), .rst(rst){
    dff charX[11](#INIT(400));
    dff charY[11](#INIT(110));
    
    fsm state(.clk(clk), #INIT(RIGHT)) = {RIGHT, LEFT};
    
    dff timer[20];
    
  }
  
  
  always {
    // Draw enemy
    r = 0;
    g = 0;
    b = 0;
    
    if((cursorX - charX.q + 26) > 0 && (cursorX - charX.q + 26) < 80 ){
      if((cursorY - charY.q + 26) > 0 && (cursorY - charY.q + 26) < 100){
        r = 1;
        g = 0;
        b = 0;

      }
    } else {
      r = 0;
      g = 0;
      b = 0;  
    }
      

    
    // Maybe use some fsm to determine movement?
    //if(timer.q == 1){
      // Need to find some way to randomly generate numbers 
    //  charX.d = charX.q + 1; // + ?
    //  charY.d = charY.q + 1; // + ?
    //}
    
    //if(timer.q == 2){
    //  charX.d = charX.q + 0;
    //  charY.d = charY.q + 1;
      
    //}
    
    //timer.d = timer.q + 1;
    
    timer.d = timer.q + 1;
    if(timer.q == 1){
    
        if((state.q == state.RIGHT) && (charX.q == 720)){
          state.d = state.LEFT;
        }

        if((state.q == state.LEFT) && (charX.q == 80)){
          state.d = state.RIGHT;
        }

        if(state.q == state.LEFT){
          charX.d = charX.q - 1; 
        }
        if(state.q == state.RIGHT){
          charX.d = charX.q + 1; 
        }
      
    }
    
    enemyPosX = charX.q;
    enemyPosY = charY.q;
  }
}
